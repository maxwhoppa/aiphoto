name: Deploy

on:
  push:
    branches: [main]
    paths:
      - 'server/**'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

concurrency:
  group: deploy-${{ github.event.inputs.stage || 'dev' }}
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.stage || 'dev' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Store secrets in AWS Parameter Store
        run: |
          aws ssm put-parameter --name "/aiphoto/${{ github.event.inputs.stage || 'dev' }}/google-gemini-api-key" --value "${{ secrets.GOOGLE_GEMINI_API_KEY }}" --type "SecureString" --overwrite || true
          aws ssm put-parameter --name "/aiphoto/${{ github.event.inputs.stage || 'dev' }}/sentry-dsn" --value "${{ secrets.SENTRY_DSN }}" --type "SecureString" --overwrite || true

      - name: Deploy to dev
        if: ${{ github.event.inputs.stage == 'dev' || (github.event.inputs.stage == '' && github.ref == 'refs/heads/main') }}
        run: |
          npx cdk bootstrap --require-approval never || true
          npx cdk deploy --require-approval never

      - name: Deploy to staging
        if: ${{ github.event.inputs.stage == 'staging' }}
        run: |
          npx cdk bootstrap --require-approval never || true
          npx cdk deploy --require-approval never --context stage=staging

      - name: Deploy to production
        if: ${{ github.event.inputs.stage == 'prod' }}
        run: |
          npx cdk bootstrap --require-approval never || true
          npx cdk deploy --require-approval never --context stage=prod

      - name: Run smoke tests
        if: ${{ github.event.inputs.stage == 'prod' }}
        run: |
          npm run test:smoke
        env:
          API_ENDPOINT: ${{ steps.deploy.outputs.ApiEndpoint }}

      - name: Notify Slack on success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#deployments'
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#deployments'
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Create Sentry release
        if: ${{ github.event.inputs.stage == 'prod' && success() }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: aiphoto-server
        with:
          environment: production
          version: ${{ github.sha }}